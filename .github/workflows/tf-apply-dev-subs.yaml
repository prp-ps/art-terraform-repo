name: Terraform Dev Plan (LOCAL only)

permissions:
  contents: read

on:
  workflow_dispatch:  # manual runs only (no push trigger for now)

jobs:
  tf-dev-plan-local:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.6"

      # Local init: no backend, no cloud calls
      - name: Terraform Init (LOCAL, no backend)
        working-directory: ./environments/dev
        run: terraform init -backend=false

      - name: Terraform fmt & validate
        working-directory: ./environments/dev
        run: |
          set -x
          # Format in-place; never fail the job if files needed formatting
          terraform fmt -recursive || true
          terraform validate


      - name: Terraform Plan (LOCAL)
        id: plan
        working-directory: ./environments/dev
        run: |
          # Fail the step if terraform plan fails anywhere in the pipeline
          set -euo pipefail
          terraform plan -no-color \
            -refresh=false -lock=false \
            -var-file="dev.tfvars" \
            -out=tfplan | tee plan.txt

          # Sanity check: ensure the plan file exists
          if [ ! -f tfplan ]; then
            echo "::error::tfplan not found. Terraform plan likely failed. See plan.txt below."
            tail -n 200 plan.txt || true
            exit 1
          fi


      # Ensure jq is available for JSON parsing
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # ðŸ”Ž Human-friendly summary of adds/changes/deletes BEFORE apply
      - name: Summarize Plan (adds/changes/deletes)
        id: summarize
        working-directory: ./environments/dev
        run: |
          terraform show -json tfplan > plan.json
          ADDS=$(jq '[.resource_changes[]?|select(.change.actions|index("create"))]|length' plan.json)
          CHANGES=$(jq '[.resource_changes[]?|select(.change.actions|index("update"))]|length' plan.json)
          DELETES=$(jq '[.resource_changes[]?|select(.change.actions|index("delete"))]|length' plan.json)
          echo "adds=$ADDS" >> $GITHUB_OUTPUT
          echo "changes=$CHANGES" >> $GITHUB_OUTPUT
          echo "deletes=$DELETES" >> $GITHUB_OUTPUT

          echo "---------------------------------------------"
          echo "Planned changes:"
          echo "  + Adds:      $ADDS"
          echo "  ~ Changes:   $CHANGES"
          echo "  - Deletes:   $DELETES"
          echo "---------------------------------------------"
          echo "Resources by action:"
          jq -r '
            .resource_changes[]
            | {addr:.address, acts:(.change.actions|join(","))}
            | "\(.acts) : \(.addr)"
          ' plan.json | sort

      - name: Upload Plan Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-dev-local
          path: |
            environments/dev/plan.txt
            environments/dev/plan.json
